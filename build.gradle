plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'maven-publish'
	id 'com.palantir.docker' version '0.35.0'
	id 'com.palantir.docker-run' version '0.35.0'
}

group = 'com.klsorge'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = "https://maven.pkg.github.com/klsorge/bulletin-board"
			credentials {
				username = "${USER}"
				password = "${TOKEN}"
			}
		}
	}
	publications {
		mavenJava(MavenPublication) {
			from(components.java)
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

docker {
	name "klsorge/${project.name}:${version}"
	copySpec.from(tasks.unpack.outputs).into('dependency')
	buildArgs(['DEPENDENCY': 'dependency'])
}

dockerRun {
	name "${project.name}-dockerRun"
	image docker.name
	network 'host'
	daemonize false
}
